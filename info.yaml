--- 
# Tiny Tapeout project information
project:
# If using wokwi, set this to your project's ID, else 0
  wokwi_id: 377987249861643265 # Tiny Tapeout 5 - First Attempt

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
#  source_files:        
#    - counter.v
#    - decoder.v
#  top_module:  "tt_um_example"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 3x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone
# new to your design to know what it does and how to operate it. This info will
# be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  ### Your nane
  author:       "Paul Schulz"
  ### Project title
  title:        "Parallel Processing Node"
  ### other examples include Verilog, Amaranth, VHDL, etc
  language:     "Wokwi"
  ### Short description of what your project does
  description:  "Investigation into Parallel Processing"
  
  ### Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      This hardware takes inputs, processes and outputs them asynchronously.
      This node is designed to be the building block of a much larger system.

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      Press 'reset' to clear input registers (1-4).
      Set the input (0-3) toggle the clock-in lines (1-4) to load the 4x 4-bit inputs.
      Toggle the clock line to process the inputs and set output.
      
# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:               
    - Input 0 (Red)
    - Input 1 (Green)
    - Input 2 (Blue)
    - Input 3 (Yellow)
    - Clock In 1
    - Clock In 2
    - Clock In 3
    - Clock In 4
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - segment a
    - segment b
    - segment c
    - segment d 
    - segment e
    - segment f
    - segment g
    - dot
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - none
    - none
    - none
    - none
    - none
    - none
    - none
    - none

# The following fields are optional
  tag:          "experimental,test,clockless,parallel"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  ""      # Describe any external hardware needed
  discord:      ""      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     0       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository (must be 512kb or less)
